<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Response</title>
</head>
<body>
    <h1>API Response</h1>
    <div id="response"></div>
    <h2>Current Alerting Event Details</h2>
    <div id="currentAlertingEventResponse"></div>
    <h2>Transaction Details</h2>
    <div id="transactionDetails"></div>
    <h2>PTY Details</h2>
    <div id="ptyDetails"></div>

    <script>
        // Function to fetch the initial API response
        async function fetchInitialApiResponse() {
            const url = 'https://sasserver.demo.sas.com/svi-alert/alerts/24cc78e4-3cc1-40bb-9a77-2c63b24d8f2e';
            const token = 'YOUR_API_KEY_HERE';
            const cookie = 'YOUR_COOKIE_HERE';

            const myHeaders = new Headers();
            myHeaders.append("Authorization", `Bearer ${token}`);
            myHeaders.append("Cookie", cookie);

            const requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            try {
                const response = await fetch(url, requestOptions);

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                displayResponse('response', result);

                const currentAlertingEventId = result.currentAlertingEventId;
                const actionableEntityId = result.actionableEntityId;
                console.log('Current Alerting Event ID:', currentAlertingEventId);
                console.log('Actionable Entity ID:', actionableEntityId);

                fetchCurrentAlertingEvent(currentAlertingEventId);
                fetchTransactionDetails(actionableEntityId);
                fetchPtyDetails(actionableEntityId);
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
        }

        // Function to fetch the current alerting event details using the extracted ID
        async function fetchCurrentAlertingEvent(eventId) {
            const url = `https://sasserver.demo.sas.com/svi-alert/alertingEvents/${eventId}`;
            const token = 'YOUR_API_KEY_HERE';
            const cookie = 'YOUR_COOKIE_HERE';

            const myHeaders = new Headers();
            myHeaders.append("Authorization", `Bearer ${token}`);
            myHeaders.append("Cookie", cookie);

            const requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            try {
                const response = await fetch(url, requestOptions);

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                console.log('Current Alerting Event Details:', result);
                displayResponse('currentAlertingEventResponse', result);
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
        }

        // Function to fetch the transaction details using the actionableEntityId
        async function fetchTransactionDetails(actionableEntityId) {
            const url = `https://sasserver.demo.sas.com/amlCore/transactions?entityLevelCode=PTY&entityNumber=${actionableEntityId}`;
            const token = 'YOUR_API_KEY_HERE';
            const cookie = 'YOUR_COOKIE_HERE';

            const myHeaders = new Headers();
            myHeaders.append("Authorization", `Bearer ${token}`);
            myHeaders.append("Cookie", cookie);

            const requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            try {
                const response = await fetch(url, requestOptions);

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                console.log('Transaction Details:', result);
                displayResponse('transactionDetails', result);
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
        }

        // Function to fetch the PTY details using the actionableEntityId
        async function fetchPtyDetails(actionableEntityId) {
            const url = `https://sasserver.demo.sas.com/SASVisualInvestigator/pages/PTY/${actionableEntityId}`;
            const token = 'YOUR_API_KEY_HERE';
            const cookie = 'YOUR_COOKIE_HERE';

            const myHeaders = new Headers();
            myHeaders.append("Authorization", `Bearer ${token}`);
            myHeaders.append("Cookie", cookie);

            const requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            try {
                const response = await fetch(url, requestOptions);

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                console.log('PTY Details:', result);
                displayResponse('ptyDetails', result);
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
        }

        // Function to display the API response in the HTML
        function displayResponse(elementId, data) {
            const responseDiv = document.getElementById(elementId);
            responseDiv.innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
        }

        // Fetch the initial API response when the page loads
        window.onload = function() {
            fetchInitialApiResponse();
        };
    </script>
</body>
</html>

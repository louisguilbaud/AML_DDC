
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>GPT Summary Generator</title>
<style>
    body {
      background-color: #f8f9fa;
      font-family: Arial, sans-serif;
    }
    .container {
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      padding: 20px;
      max-width: 800px;
      margin: 50px auto;
    }
    .tabs {
      margin-bottom: 20px;
    }
    .tab-button {
      padding: 10px 20px;
      background-color: #f8f9fa;
      border: none;
      border-radius: 4px 4px 0 0;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .tab-button.active {
      background-color: #007bff;
      color: #fff;
    }
    .tab-content {
      display: none;
      padding: 20px;
      border: 1px solid #ccc;
      border-top: none;
      border-radius: 0 0 4px 4px;
    }
    .tab-content.active {
      display: block;
    }
    .form-group {
      margin-bottom: 20px;
    }
    .form-label {
      font-weight: bold;
      display: block;
    }
    .form-input {
      width: 100%;
      padding: 8px;
      border-radius: 4px;
      border: 1px solid #ccc;
      resize: vertical;
    }
    .form-input-file {
      padding: 8px;
      border-radius: 4px;
      border: 1px solid #ccc;
      width: 100%;
    }
    .btn-primary {
      background-color: #007bff;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .btn-primary:hover {
      background-color: #0056b3;
    }
    #inputText {
      margin-top: 20px;
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 4px;
    }
</style>
</head>
	<body>
	<div class="container">
	<h2>GPT Summary Generator </h2>
	<div class="tabs">
	<button class="tab-button active" onclick="openTab('settings')">Settings</button>
	<button class="tab-button" onclick="openTab('qa')">Q&A</button>
	<button class="tab-button" onclick="openTab('translate')">Translate</button>
	</div>
	<div id="settings" class="tab-content active">
	<form id="summaryForm">
	<div class="form-group">
	<label for="pdfFile" class="form-label">Upload PDF:</label>
	<input type="file" class="form-input-file" id="pdfFile" accept=".pdf">
	</div>
	<div class="form-group">
	<label for="textInput" class="form-label">Text Input:</label>
	<textarea class="form-input" id="textInput" rows="5"></textarea>
	</div>
	<button type="submit" class="btn-primary" id="callApiButton">Generate Summary</button>
	</form>
	<div id="inputText" style="display:none;"></div>
	</div>
	<div id="qa" class="tab-content">
	<!-- Q&A content goes here -->
	</div>
	<div id="translate" class="tab-content">
	<!-- Translation content goes here -->
	</div>
	<div>
	<p>API Responses: <span id="apiResponse"></span></p>
	</div>
	</div>

</body>

<script src='./javascripts/sas/util/messagingUtil.js'></script>
	<script src="./javascripts/jquery/jquery.min.js"></script>
    <script>
        "use strict";

        document.addEventListener("DOMContentLoaded", function() {
        va.messagingUtil.setOnDataReceivedCallback(updateURL);

        function updateURL(vaMsgObj) {
            console.log(vaMsgObj.data[0][0]);
            if (vaMsgObj && vaMsgObj.data && vaMsgObj.data.length > 0) {
                document.getElementById("urlText").textContent = vaMsgObj.data[0][0];
                document.getElementById("api_key").textContent = vaMsgObj.data[0][1];
            } else {
                document.getElementById("urlText").textContent = "No URL available";
            }
        }

        document.getElementById("callApiButton").addEventListener("click", function() {
            // Get API key from the span element
            var apiKey = document.getElementById("api_key").textContent;

            // Construct API call
            var apiUrl = "https://api.openai.com/v1/chat/completions";
            var prompt = "hello, how are you?";
		var model = "text-davinci-002";

            // Make API call
             fetch(apiUrl, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + apiKey
                },
                body: JSON.stringify({
			"model": "gpt-3.5-turbo",
			"messages": [{"role": "user", "content": "Hello!"}]
                   
                })
            })
            .then(response => response.json())
            .then(data => {
                document.getElementById("apiResponse").textContent = JSON.stringify(data);
            })
            .catch(error => {
                console.error("Error:", error);
                document.getElementById("apiResponse").textContent = "Error occurred while fetching API data.";
            });
        });
	});
    </script>
</html>

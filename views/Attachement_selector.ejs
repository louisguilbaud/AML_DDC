<!DOCTYPE html>
<html>
<head>
    <title>API Call Example - Summarize with ChatGPT</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        #summaryBox {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ccc;
            background: #f9f9f9;
            white-space: pre-wrap;
        }
    </style>
</head>
<body>

<div class="container" id="resultContainer">
    <h2>Select a Document</h2>
    <select id="documentSelect">
        <option value="">Select a document</option>
    </select>
    <button id="summarizeButton">Summarize Document</button>
</div>

<div id="selectedDocumentId"></div>
<div id="summaryBox">Summary will appear here...</div>

<script>
// Global variable to store selected document ID
var selectedDocumentId = '';

// Function to fetch API data (list of attachments)
function fetchApiData() {
    fetch('https://sasserver.demo.sas.com/svi-datahub/documents/alerts/0fa7949f-39aa-4a83-974c-d4f2c375dec0/attachments')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            displayDocumentNames(data);
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
            document.getElementById('documentSelect').innerHTML = '<option value="">Error fetching data from the API</option>';
        });
}

// Populate dropdown with document names
function displayDocumentNames(data) {
    var documentSelect = document.getElementById('documentSelect');
    var selectedOptionValue = documentSelect.value;
    documentSelect.innerHTML = '<option value="">Select a document</option>';
    data.items.forEach(item => {
        var option = document.createElement('option');
        option.value = item.id;
        option.textContent = item.name;
        if (item.id === selectedOptionValue) {
            option.selected = true;
        }
        documentSelect.appendChild(option);
    });
}

// Handle document selection
document.getElementById('documentSelect').addEventListener('change', function(event) {
    selectedDocumentId = event.target.value;
    if (selectedDocumentId) {
        document.getElementById('selectedDocumentId').textContent = 'Selected Document ID: ' + selectedDocumentId;
    } else {
        document.getElementById('selectedDocumentId').textContent = '';
    }
});

// Handle summarization
document.getElementById('summarizeButton').addEventListener('click', function() {
    if (selectedDocumentId) {
        var contentUrl = 'https://sasserver.demo.sas.com/svi-datahub/documents/alerts/0fa7949f-39aa-4a83-974c-d4f2c375dec0/files/' + selectedDocumentId + '/content';

        // Fetch the document content from SAS
        fetch(contentUrl, {
            method: 'GET',
            credentials: 'include' // include cookies if needed
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to fetch document content');
            }
            return response.text(); // assuming text-based docs (txt, json, csv, etc.)
        })
        .then(docText => {
            // Send content to ChatGPT for summarization
            return fetch("https://api.openai.com/v1/chat/completions", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer YOUR_OPENAI_API_KEY" // <-- Replace with your key
                },
                body: JSON.stringify({
                    model: "gpt-4o-mini", // or gpt-4o, gpt-3.5-turbo, etc.
                    messages: [
                        { role: "system", content: "You are an assistant that summarizes documents." },
                        { role: "user", content: "Summarize this document:\n\n" + docText }
                    ],
                    temperature: 0.3
                })
            });
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("ChatGPT API error");
            }
            return response.json();
        })
        .then(data => {
            // Show the summary in the page
            const summary = data.choices[0].message.content;
            document.getElementById("summaryBox").textContent = summary;
        })
        .catch(error => {
            console.error("Summarization error:", error);
            document.getElementById("summaryBox").textContent = "Error summarizing the document.";
        });

    } else {
        alert('Please select a document first.');
    }
});

// Initial fetch of document list
fetchApiData();

// Polling every 5 seconds
setInterval(fetchApiData, 5000);
</script>

</body>
</html>
